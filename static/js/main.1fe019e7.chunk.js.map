{"version":3,"sources":["Firebase.js","components/UserBadge.js","components/Message.js","components/Chatroom.js","components/Signout.js","components/Navbar.js","components/Signin.js","components/MainContainer.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","expToLevel","exp","Math","floor","sqrt","getBadgeColor","level","getBadgeTextColor","UserBadge","boxSize","bg","style","border","color","fontWeight","fontSize","Message","message","msgClass","uid","currentUser","useState","senderExp","setSenderExp","collection","doc","get","then","docSnapshot","direction","align","mt","ml","size","src","photoURL","width","className","justify","mr","Chatroom","messagesRef","recentMessagesData","orderBy","limit","useCollectionData","idField","messages","text","setText","sendEnabled","setSendEnabled","pageBottom","useRef","checkLevelUp","toast","icon","duration","useEffect","current","scrollIntoView","behavior","pb","height","w","h","overflow","maxHeight","map","ref","px","position","bottom","display","onSubmit","e","a","preventDefault","setTimeout","add","createdAt","FieldValue","serverTimestamp","ReactGA","event","category","action","increment","userRef","update","isRequired","children","class","placeholder","value","onChange","target","length","slice","orientation","type","colorScheme","isDisabled","rightIcon","Signout","disabled","onClick","signOut","Navbar","top","zIndex","fontFamily","Signin","leftIcon","googleAuth","GoogleAuthProvider","signInWithPopup","cred","exists","user","set","merge","success","handleSignin","MainContainer","useAuthState","App","window","GA_INIT","initialize","page","location","pathname","pageview","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fe019e7.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n});\r\n\r\nexport const auth = app.auth();\r\nexport const firestore = app.firestore();","import { AvatarBadge } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\nexport function expToLevel(exp) {\r\n  return Math.floor(Math.sqrt(exp)/2);\r\n}\r\n\r\nfunction getBadgeColor(level) {\r\n  if(level === 0) { // 0\r\n    return \"#cdcdcd\";\r\n  } else if(level <= 2) { // 1-2\r\n    return \"#adff2f\";\r\n  } else if(level <= 4) { // 3-4\r\n    return \"#00bfff\";\r\n  } else if(level <= 6) { // 5-6\r\n    return \"#0000ff\";\r\n  } else if(level <= 8) { // 7-8\r\n    return \"#8a2be2\";\r\n  } else if(level <= 10) {\r\n    return \"#ff8c00\";\r\n  } else {\r\n    return \"#ff0000\";\r\n  }\r\n}\r\n\r\nfunction getBadgeTextColor(level) {\r\n  if(level === 0) {\r\n    return \"black\";\r\n  } else if(level <= 2) {\r\n    return \"black\";\r\n  } else {\r\n    return \"white\";\r\n  }\r\n}\r\n\r\nconst UserBadge = ({ exp }) => {\r\n  const level = expToLevel(exp);\r\n  return (  \r\n    <AvatarBadge boxSize=\"1em\" bg={getBadgeColor(level)} style={{ border: \"2px solid white\" }}>\r\n      <span style={{ color: getBadgeTextColor(level), fontWeight: \"600\", fontSize: 12 }}>{level}</span>\r\n    </AvatarBadge>\r\n  );\r\n}\r\n \r\nexport default UserBadge;","import { Avatar, AvatarBadge, Box, Flex } from '@chakra-ui/react';\r\nimport React, { useState } from 'react';\r\nimport { auth, firestore } from '../Firebase';\r\nimport UserBadge from './UserBadge';\r\n\r\n\r\n\r\nconst Message = ({ message }) => {\r\n  const msgClass = message.uid === auth.currentUser.uid ? \"msgSent\" : \"msgReceived\";\r\n  const [senderExp, setSenderExp] = useState(0);\r\n\r\n  const userRef = firestore.collection(\"users\").doc(message.uid);\r\n  userRef.get().then((docSnapshot) => {\r\n    setSenderExp(docSnapshot.get(\"exp\"));\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {message.uid !== auth.currentUser.uid ?\r\n        // messages from others\r\n        <Flex direction=\"row\" align=\"center\" mt=\"10px\" ml=\"15px\">\r\n          <Avatar size=\"md\" src={message.photoURL}>\r\n            <UserBadge exp={senderExp} />\r\n          </Avatar>\r\n          <Box width=\"auto\" className={`message ${msgClass}`}>\r\n            {message.message}\r\n          </Box>\r\n        </Flex>\r\n        :\r\n        // messages from self\r\n        <Flex direction=\"row\" align=\"center\" justify=\"flex-end\" mt=\"10px\" mr=\"15px\">\r\n          <Box width=\"auto\" className={`message ${msgClass}`}>\r\n            {message.message}\r\n          </Box>\r\n          <Avatar size=\"md\" src={message.photoURL}>\r\n            <UserBadge exp={senderExp} />\r\n          </Avatar>\r\n        </Flex>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Message;","import { Box, Button, Divider, Flex, FormControl, Input, InputGroup, InputLeftElement, useTimeout } from '@chakra-ui/react';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { firestore } from \"../Firebase\";\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport Message from './Message';\r\nimport { auth } from '../Firebase';\r\nimport firebase from 'firebase/app';\r\nimport { expToLevel } from './UserBadge';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport ReactGA from 'react-ga';\r\n\r\nconst NUM_MSG_VISIBLE = 25;\r\nconst MSG_LENGTH_LIMIT = 100; // 100 characters\r\nconst MSG_SEND_COOLDOWN = 1000; // 1000ms = 1s\r\n\r\nconst Chatroom = () => {\r\n  const messagesRef = firestore.collection(\"messages\");\r\n  const recentMessagesData = messagesRef.orderBy('createdAt').limit(NUM_MSG_VISIBLE);\r\n  const [messages] = useCollectionData(recentMessagesData, { idField: 'id' });\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [sendEnabled, setSendEnabled] = useState(true);\r\n  const pageBottom = useRef();\r\n\r\n  const checkLevelUp = (uid) => {\r\n    const userRef = firestore.collection(\"users\").doc(uid);\r\n    userRef.get().then((docSnapshot) => {\r\n      const exp = docSnapshot.get(\"exp\");\r\n\r\n      if (expToLevel(exp) > expToLevel(exp - 1)) {\r\n        toast(`You have leveled up!`,\r\n          {\r\n            icon: '👏',\r\n            duration: 7000\r\n          });\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    pageBottom.current.scrollIntoView({ behavior: \"smooth\" });\r\n  });\r\n\r\n  const sendMsgCooldown = () => {\r\n    setSendEnabled(false);\r\n    setTimeout(() => {\r\n      setSendEnabled(true);\r\n    }, MSG_SEND_COOLDOWN);\r\n  }\r\n\r\n  return (\r\n    <Flex direction=\"column\" justify=\"flex-end\" pb=\"45px\" bg=\"#ffffff\" height=\"99vh\">\r\n      <Toaster />\r\n      <Box w=\"100%\" h=\"auto\" style={{ overflow: \"auto\", maxHeight: \"95%\" }}>\r\n        {messages &&\r\n          messages.map(message => <Message message={message} />)\r\n        }\r\n        <div ref={pageBottom}></div>\r\n      </Box>\r\n      <Flex w=\"100%\" h=\"50px\" bg=\"gray.300\" px=\"5px\" mt=\"auto\" mr=\"5px\" align=\"center\" position=\"fixed\" bottom=\"0\">\r\n        <form style={{ width: \"100%\", display: \"inline-flex\" }}\r\n          onSubmit={async (e) => {\r\n            e.preventDefault(); // prevent page refresh\r\n            const { uid, photoURL } = auth.currentUser;\r\n\r\n            sendMsgCooldown();\r\n\r\n            await messagesRef.add({\r\n              message: text,\r\n              createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n              uid,\r\n              photoURL\r\n            });\r\n            ReactGA.event({\r\n              category: 'Babble',\r\n              action: 'User sent a message'\r\n            });\r\n            const increment = firebase.firestore.FieldValue.increment(1);\r\n            const userRef = firestore.collection(\"users\").doc(uid);\r\n            const res = await userRef.update({ exp: increment });\r\n            checkLevelUp(uid);\r\n            setText(\"\");\r\n            pageBottom.current.scrollIntoView({ behavior: \"smooth\" }); // scroll to bottom of page after sending msg\r\n\r\n          }}>\r\n          <FormControl isRequired>\r\n            <InputGroup>\r\n              <InputLeftElement children={<i class=\"fas fa-comment-dots\"></i>} />\r\n              <Input bg=\"white\" placeholder=\"Type your message...\" value={text}\r\n                onChange={(e) => {\r\n                  if (e.target.value.length > MSG_LENGTH_LIMIT) {\r\n                    e.target.value = e.target.value.slice(0, MSG_LENGTH_LIMIT)\r\n                  }\r\n                  setText(e.target.value);\r\n                }}\r\n              />\r\n            </InputGroup>\r\n\r\n          </FormControl>\r\n\r\n          <Divider orientation=\"vertical\" />\r\n\r\n          <Button ml=\"5px\" type=\"submit\" colorScheme=\"blue\" isDisabled={!sendEnabled}\r\n            rightIcon={<i class=\"fas fa-paper-plane\"></i>}\r\n          >\r\n            Send\r\n          </Button>\r\n        </form>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Chatroom;","import { Button } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { auth } from '../Firebase';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport ReactGA from 'react-ga';\r\n\r\nconst Signout = () => {\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <Button h=\"40px\" ml=\"auto\" colorScheme=\"red\" disabled={!auth.currentUser}\r\n        rightIcon={<i class=\"fas fa-sign-out-alt\"></i>}\r\n        onClick={() => {\r\n          if (auth.currentUser) {\r\n            auth.signOut();\r\n            ReactGA.event({\r\n              category: 'Babble',\r\n              action: 'User has signed out'\r\n            });\r\n            toast(`You have signed out.`,\r\n              {\r\n                icon: '🚪',\r\n                duration: 3000\r\n              });\r\n          }\r\n        }}\r\n      >\r\n        Sign out\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signout;","import { Box, Center, Flex, Text } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport Signout from './Signout';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <Flex direction=\"row\" px=\"5px\" align=\"center\" h=\"50px\" w=\"100%\" bg=\"white\" position=\"fixed\" top=\"0\" zIndex=\"1\">\r\n      <Text className=\"navbar-logo\" fontFamily=\"Poppins\" fontWeight=\"600\" fontSize=\"lg\" ml=\"10px\">\r\n        <i class=\"fas fa-comments emphasis\"></i> Babble\r\n      </Text>\r\n      <Signout />\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import { Button, Center } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { auth, firestore } from \"../Firebase\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport ReactGA from 'react-ga';\r\n\r\nfunction handleSignin() {\r\n  const googleAuth = new firebase.auth.GoogleAuthProvider();\r\n  auth.signInWithPopup(googleAuth).then(cred => {\r\n    const userRef = firestore.collection(\"users\").doc(auth.currentUser.uid);\r\n    userRef.get().then((docSnapshot) => {\r\n      if (!docSnapshot.exists) { // create new document only if it doesn't already exist by the given uid\r\n        return firestore.collection(\"users\").doc(cred.user.uid)\r\n          .set({ exp: 0 }, { merge: true });\r\n      }\r\n    })\r\n  }).then(() => {\r\n    ReactGA.event({\r\n      category: 'Babble',\r\n      action: 'User has signed in'\r\n    });\r\n    toast.success(`You have signed in!`,\r\n      {\r\n        duration: 3000\r\n      });\r\n  });\r\n}\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <Center w=\"100%\" h=\"90vh\" bg=\"white\">\r\n        <Button colorScheme=\"green\"\r\n          leftIcon={<i class=\"fas fa-sign-in-alt\"></i>}\r\n          onClick={() => { handleSignin() }}\r\n        >\r\n          Sign-in with Google\r\n        </Button>\r\n      </Center>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signin;","import { Box, Divider } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport Chatroom from './Chatroom';\r\nimport Navbar from './Navbar';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from \"../Firebase\";\r\nimport Signin from './Signin';\r\n\r\nconst MainContainer = () => {\r\n  const [user, loading, error] = useAuthState(auth);\r\n  return (  \r\n    <Box w=\"100vw\" h=\"100vh\" bg=\"white\">\r\n      <Navbar />\r\n      { user ? <Chatroom /> : <Signin />}\r\n    </Box>\r\n  );\r\n}\r\n \r\nexport default MainContainer;","import { Container } from \"@chakra-ui/react\";\nimport Chatroom from \"./components/Chatroom\";\nimport MainContainer from \"./components/MainContainer\";\nimport ReactGA from 'react-ga'\nimport { useEffect } from \"react\";\n\nfunction usePageViews() {\n  useEffect(() => {\n    if(!window.GA_INIT) {\n      ReactGA.initialize(\"UA-186165133-1\");\n      window.GA_INIT = true;\n    }\n    ReactGA.set({ page: window.location.pathname });\n    ReactGA.pageview(window.location.pathname );\n  });\n}\n\n\nfunction App() {\n  usePageViews();\n\n  return (\n    <div className=\"App\">\n      <MainContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);"],"sourceRoot":""}